-----------------------------------------------------------------------------
--
--  Logical unit: CEACustomizationUtil
--
--  File   : C_EA_Customization_Util_API.api
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  210422   EA      Created
--  ------   ------  --------------------------------------------------
-----------------------------------------------------------------------------

DEFINE MODULE        = CONFIG
DEFINE LU            = CEACustomizationUtil
DEFINE PKG           = C_EA_Customization_Util_API

PROMPT Creating &PKG SPECIFICATION

CREATE OR REPLACE PACKAGE &PKG IS

module_  CONSTANT VARCHAR2(25) := '&MODULE';
lu_name_ CONSTANT VARCHAR2(25) := '&LU';
lu_type_ CONSTANT VARCHAR2(15) := 'Utility';

-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PRIVATE METHODS ----------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PROTECTED METHODS --------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------
-----------------------------------------------------------------------------

PROCEDURE Bulk_Update_Invoice_Header_Notes__(company_  IN VARCHAR2,
                                               identity_ IN VARCHAR2);

  PROCEDURE Update_Follow_Up_Date__(calender_id_    IN VARCHAR2,
                                    company_        IN VARCHAR2,
                                    invoice_id_     IN VARCHAR2,
                                    note_id_        IN NUMBER,
                                    note_status_id_ IN NUMBER);
  
  --C0446 EntChamuA (START)
  PROCEDURE Create_Equipment_Object__(order_no_ IN VARCHAR2);

  PROCEDURE Create_Serial_Object__(catalog_no_     IN VARCHAR2,
                                   order_no_       IN VARCHAR2,
                                   line_no_        IN VARCHAR2,
                                   line_item_no_   IN VARCHAR2,
                                   rel_no_         IN VARCHAR2,
                                   warranty_id_    IN VARCHAR2,
                                   object_id_      IN VARCHAR2,
                                   object_created_ IN VARCHAR2,
                                   col_objid_      IN VARCHAR2,
                                   real_ship_date_ IN DATE);

  PROCEDURE Create_Functional_Object_(catalog_no_     IN VARCHAR2,
                                      order_no_       IN VARCHAR2,
                                      line_no_        IN VARCHAR2,
                                      rel_no_         IN VARCHAR2,
                                      real_ship_date_ IN DATE,
                                      warranty_id_    IN VARCHAR2,
                                      object_id_      IN VARCHAR2,
                                      catalog_desc_   IN VARCHAR2,
                                      contract_       IN VARCHAR2,
                                      buy_qty_due_    IN NUMBER,
                                      object_created_ in VARCHAR2,
                                      col_objid_      IN VARCHAR2);
  --C0446 EntChamuA (END)

  FUNCTION Transf_Part_To_Inv_Part(target_key_ref_ IN VARCHAR2,
                                   service_name_   IN VARCHAR2)
    RETURN VARCHAR2;

  FUNCTION Get_Update_Follow_Up_Date_Sql__(calender_id_    IN VARCHAR2,
                                           company_        IN VARCHAR2,
                                           invoice_id_     IN VARCHAR2,
                                           note_id_        IN NUMBER,
                                           note_status_id_ IN NUMBER)
    RETURN VARCHAR2;

  FUNCTION Get_First_Time_Fix_Percentage__(start_date_      IN VARCHAR2,
                                           end_Date_        IN VARCHAR2,
                                           customer_id_     IN VARCHAR2 DEFAULT NULL,
                                           organization_id_ IN VARCHAR2 DEFAULT NULL,
                                           work_type_id_    IN VARCHAR2 DEFAULT NULL,
                                           work_task_       IN VARCHAR2 DEFAULT NULL,
                                           resource_id_     IN VARCHAR2 DEFAULT NULL)
    RETURN NUMBER;

   FUNCTION Get_Begin_Date__(
      year_    IN VARCHAR2,
      quarter_ IN VARCHAR2,
      month_   IN VARCHAR2,
      week_    IN VARCHAR2) RETURN DATE DETERMINISTIC;

   FUNCTION Get_End_Date__(
      year_    IN VARCHAR2,
      quarter_ IN VARCHAR2,
      month_   IN VARCHAR2,
      week_    IN VARCHAR2) RETURN DATE DETERMINISTIC;

   PROCEDURE Copy_Circuit_Reference__(
      part_no_  IN VARCHAR2,
      part_rev_ IN VARCHAR2);

  PROCEDURE Close_Non_Finance_User_Group;

FUNCTION Check_Cause_Discount(wo_no_   IN NUMBER,
                                company_ IN varchar2,
                                site_    IN VARCHAR2,
                                type_    IN varchar2) return VARCHAR2 ;

   FUNCTION Get_Allowed_Tax_Codes__(
      company_    IN VARCHAR2,  
      customer_   IN VARCHAR2,
      catalog_no_ IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION Transf_Mansup_Attach_To_PO(target_key_ref_ IN VARCHAR2,
                                      service_name_   IN VARCHAR2)
    RETURN VARCHAR2;
    
  FUNCTION Get_Inv_Part_Barcode_Rep_Head RETURN VARCHAR2;
  
  Function Get_Location_Inv_Part_Barcode(part_no_ IN VARCHAR2,
                                         contract_ IN VARCHAR2) RETURN VARCHAR2;
   PROCEDURE Create_Functional_Object__ (
      project_id_     IN VARCHAR2,
      sub_project_id_ IN VARCHAR2);
   
 PROCEDURE Sales_Contract_Auto_Closure;
  --C0367 START
  FUNCTION Check_Inv_Header_CA(identity_ IN VARCHAR2, 
                              credit_analyst_ IN VARCHAR2, 
                              company_ IN VARCHAR2) return VARCHAR2;
  
  FUNCTION Get_Largest_Overdue_Debt(identity_ IN VARCHAR2, 
                                    company_ IN VARCHAR2) return VARCHAR2;
  
  FUNCTION Get_Oldest_Overdue_Debt(identity_ IN VARCHAR2, 
                                    company_ IN VARCHAR2) return VARCHAR2;
  
  FUNCTION Get_Oldest_Followup_Date(identity_ IN VARCHAR2, 
                                    company_ IN VARCHAR2) return VARCHAR2;
  
  FUNCTION Check_Credit_Escalated(company_ IN VARCHAR2,
                                 credit_analyst_ IN VARCHAR2, 
                                 identity_ IN VARCHAR2) return VARCHAR2;
  
  FUNCTION Check_Credit_Note_Queries(company_        IN VARCHAR2,
                                     credit_analyst_ IN VARCHAR2,
                                     identity_       IN VARCHAR2,
                                     type_           IN varchar2)return VARCHAR2;
  
  FUNCTION Check_Credit_Legal(company_        IN VARCHAR2,
                              credit_analyst_ IN VARCHAR2,
                              identity_       IN VARCHAR2) return varchar2;
  
  FUNCTION Check_Credit_Escalated_FC(company_        IN VARCHAR2,
                                     credit_analyst_ IN VARCHAR2,
                                     identity_       IN VARCHAR2)
    return varchar2;
  --C0367 END
  
  --C0368 START
   FUNCTION Check_Credit_Note_Queries_CM(company_    IN VARCHAR2,
                                     credit_manager_ IN VARCHAR2,
                                     identity_       IN VARCHAR2,
                                     type_           IN varchar2)return VARCHAR2;
   FUNCTION Check_Inv_Header_CM(identity_       IN VARCHAR2,
                               credit_manager_ IN VARCHAR2,
                               company_        IN VARCHAR2) return VARCHAR2;
   
   FUNCTION Check_Cr_Note_Queries_All_CM(company_    IN VARCHAR2,
                                     identity_       IN VARCHAR2,
                                     type_           IN varchar2)return VARCHAR2;
   
   FUNCTION Get_CA_Open_Items_Count(company_        IN VARCHAR2,
   credit_analyst_       IN VARCHAR2) return NUMBER;
   
   FUNCTION Check_Credit_Legal_CM(company_    IN VARCHAR2,
                              credit_manager_ IN VARCHAR2,
                              identity_       IN VARCHAR2) return varchar2;
   
   FUNCTION Check_Cr_Escalated_FC_CM(company_    IN VARCHAR2,
                                     credit_manager_ IN VARCHAR2,
                                     identity_       IN VARCHAR2)return VARCHAR2;
   
   FUNCTION Check_Escalated_CM(company_    IN VARCHAR2,
                              credit_manager_ IN VARCHAR2,
                              identity_       IN VARCHAR2) return varchar2;
   
   FUNCTION Get_Period_Target(credit_analyst_ IN VARCHAR2,
                             company_        IN VARCHAR2,
                             target_period_  IN VARCHAR2) return NUMBER;
    
   FUNCTION Get_Cash_Collected(credit_analyst_ IN VARCHAR2,
                             company_        IN VARCHAR2,
                             target_period_  IN VARCHAR2) return NUMBER; 
   --C0368 END
   
-- C0641
FUNCTION Get_Mrb_From_Po_Receipt (
   order_ref1_     IN VARCHAR2,
   order_ref2_     IN VARCHAR2,
   order_ref3_     IN VARCHAR2,
   order_ref4_     IN NUMBER) RETURN NUMBER;  


-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------

PROCEDURE Init;

END &PKG;
/
SHOW ERROR

UNDEFINE MODULE
UNDEFINE LU
UNDEFINE PKG
